$colorGray1: #1E2939;
$colorGray2: #3C495C;
$colorGray3: #626E80;
$colorGray4: #9DA5B1;
$colorGray5: #D4D9DF;
$colorGray6: #F7F9FA;

$colors:  (
  black:      $colorGray1,
  gray:       $colorGray4,
  white:      transparent,
  aqua:       #7FDBFF,
  blue:       #0074D9,
  green:      #2ECC40,
  yellow:     #FFDC00,
  orange:     #FF851B,
  red:        #FF4136,
  fuchsia:    #F012BE
);

$cellSize: 0.5em;
$drawingSize: $cellSize * 10;
$radius: 3px;

@mixin clearfix {
  &::after {
    clear: both;
    content: "";
    display: table;
  }
}

@mixin cell-color($color) {
  box-shadow: inset 0 0 0 1px $colorGray6, inset 0 0 0 3px $color;
}

* {
  box-sizing: border-box;
}

html,
body {
  background-color: $colorGray6;
  color: $colorGray3;
  font-family: "Open Sans", "helvetica neue", helvetica, arial, sans-serif;
  font-size: 18px;
  line-height: 1.2;
}

p,
ul {
  margin: 0;
  padding: 0;
}

li {
  list-style: none;
}

small {
  font-size: 0.75em;
}

a {
  color: $colorGray3;
  cursor: pointer;
  text-decoration: none;

  &:hover {
    color: $colorGray2;
    text-decoration: underline;
  }
}

.bad,
a.bad {
  color: map-get($colors, red);
}

@keyframes pulse {
  0% {
    opacity: 0;
    transform: scale3d(0, 0, 0);
  }
  100% {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
}

.loading {
   left: 50%;
   margin: -1em 0 0 -1em;
   position: fixed;
   top: 50%;
   width: 2em;
}

.loading-element {
  animation: pulse 0.4s ease-in-out alternate infinite;
  background-color: $colorGray5;
  border: 1px solid $colorGray6;
  float: left;
  height: 1em;
  width: 1em;

  &:nth-child(2) {
    animation-delay: 0.1s;
    background-color: darken($colorGray5, 10%);
  }

  &:nth-child(3) {
    animation-delay: 0.15s;
    background-color: darken($colorGray5, 10%);
  }

  &:nth-child(4) {
    animation-delay: 0.2s;
    background-color: $colorGray5;
  }
}

.drawings {
  @include clearfix;
  cursor: pointer;
  margin: 0 auto;
}

.drawing-container {
  display: flex;
  padding: $cellSize 0;
  position: relative;
}

.drawing {
  box-shadow: 0 0 0 2px $colorGray5;
  height: $drawingSize;
  overflow: hidden;
  position: relative;
  width: $drawingSize;

  .editing & {
    height: $drawingSize * 2;
    width: $drawingSize * 2;
  }
}

.drawing-new {
  $offset: $cellSize * 2;
  background-color: $colorGray5;
  box-shadow: none;
  color: $colorGray6;
  display: block;
  line-height: $drawingSize;
  text-align: center;

  &:hover {
    background-color: $colorGray4;
  }

  .logged-in & {
    cursor: pointer;
  }
}

.cell {
  float: left;
  height: $cellSize;
  width: $cellSize;

  .editing & {
    border-bottom: 1px solid;
    border-right: 1px solid;
    color: $colorGray5;
    cursor: crosshair;
    height: $cellSize * 2;
    width: $cellSize * 2;
  }

  &:nth-child(10n+10) {
    border-right: 0;
  }

  &:nth-child(n+91) {
    border-bottom: 0;
  }
}

.column {
  flex: 1;
  opacity: 0;
  padding: 0 1em;

  .drawing-container:hover & {
    opacity: 1;
  }
}

.left {
  text-align: right;

  .editing:hover & {
    opacity: 0;
  }
}

.right {
  text-align: left;

  .editing & {
    opacity: 1;
  }
}

// Cell colors
@each $colorName, $colorHex in $colors {
  [data-color="#{$colorName}"] {
    color: $colorHex;

    &:hover,
    &.cell {
      background-color: $colorHex;
    }

    &.swatch {
      @include cell-color($colorHex);
    }
  }
}

.swatches {
  float: left;
  margin-right: 1em;
}

.swatch {
  $size: $cellSize * 2;
  border-radius: 3px;
  cursor: pointer;
  float: none;
  height: $size;
  position: relative;
  width: $size;

  &:hover {
    background-color: auto;
  }

  &.cell {
    border: 0;
    box-shadow: 0 0 3px 3px $colorGray6;
    transform: scale(1.3);
    z-index: 1;
  }

  &[data-color="white"] {
    @include cell-color($colorGray5);
    background-color: $colorGray6;

    &.cell {
      box-shadow: inset 0 0 0 1px $colorGray4;
    }
  }
}
